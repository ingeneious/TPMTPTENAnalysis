library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.table('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
ncol(exp.val)
exp.val
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
ncol(exp.val)
exp.val
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
submission.files
path.prediction = submission.files
real.data = exp.val
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
for(i in 1:length(path.prediction)) {
#select prediction file i
pat <- paste('_',i,'.txt', sep='')
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
min.vector[i] <- min(predicted.value)
max.vector[i] <- max(predicted.value)
}
pat
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
for(i in 1:length(path.prediction)) {
#select prediction file i
pat <- paste('_',i,'.txt', sep='')
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
min.vector[i] <- min(predicted.value)
max.vector[i] <- max(predicted.value)
}
pat
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
prediction.table <- read.delim(file=CurrentSubmission, sep="\t", header=TRUE)
<- submission.files[grepl(pat, submission.files)]
>
CurrentSubmission
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/CAGI_5_assessment/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.table('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="Submission", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
path.prediction = submission.files
real.data = exp.val
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
pat <- paste('_',1,'.txt', sep='')
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
CurrentSubmission
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
path.prediction = submission.files
real.data = exp.val
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
pat <- paste('_',1,'.txt', sep='')
pat
submission.files
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
CurrentSubmission
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#Compute performance measures and make heatmap
Auc.threshold=c(0.65, 0.75, 0.9) # set list of threshold to be used by AUC, if empty AUC will not be calculated
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
path.prediction = submission.files
real.data = exp.val
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
pat <- paste('_',1,'.txt', sep='')
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
CurrentSubmission
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
min.vector[i] <- min(as.numeric(predicted.value)) #changed TBD
min.vector[1] <- min(as.numeric(predicted.value)) #changed TBD
max.vector[1] <- max(as.numeric(predicted.value)) #changed TBD
for(i in 1:length(path.prediction)) {
#select prediction file i
pat <- paste('_',i,'.txt', sep='')
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
min.vector[i] <- min(as.numeric(predicted.value)) #changed TBD
max.vector[i] <- max(as.numeric(predicted.value)) #changed TBD
}
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
submission.files
path.prediction = submission.filesreal.data = exp.val
path.prediction = submission.files
real.data = exp.val
#get the real data
realValue <- real.data[1:nrow(real.data), 2]
# make plots
##################
#### plot 1 : axis dimension is defined by min aand max value of all predictions
############
png("./results/ExperimentalVsPredicted.png", width = 18, height = 26, units = 'in', res = 300)
par(mfrow = c(ceiling(length(path.prediction)/4), 4)) # decide number of plots in each row of the picture and total number of lines
# check min and max value of predicted to decide plot axis length
min.vector=rep(1.0, length(path.prediction)) # create a vector for min of each prediction file
max.vector=rep(1.0, length(path.prediction)) # create a vector for max of each prediction file
for(i in 1:length(path.prediction)) {
#select prediction file i
pat <- paste('_',i,'.txt', sep='')
print(i)
CurrentSubmission <- submission.files[grepl(pat, submission.files)]
prediction.table <- read.table(file=CurrentSubmission, sep="\t", header=TRUE)
predicted.value <- prediction.table[1:nrow(prediction.table), 2]
min.vector[i] <- min(as.numeric(predicted.value)) #changed TBD
max.vector[i] <- max(as.numeric(predicted.value)) #changed TBD
}
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/CAGI_5_assessment/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.table('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="Submission", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
#!/usr/bin/env/ Rscript
#clear workspace
setwd("/Users/mabelfurutsuki/Desktop/TPMTPTENTest/data")
rm(list = ls())
# ROCR
library(ROCR) # required by function StatisticalValidation
library(plotrix)
# set working directory
setwd("../")
# load assessment functions
source("src/Check_prediction_format_V06_FR.R")
source("src/Scatterplot_pred_obs_V01_FR.R")
source("src/Calculate_statistics_V01_FR.R")
#Import data
#Import real values
exp.val <- read.delim('./data/experimental_value/real_proliferation.txt', sep='\t', header = TRUE) #file with experimental data
#Import submission template
sub.template <- read.table('./data/template/template.txt', sep='\t', header = TRUE) # submission template
#template.path='./data/submission/p16.Submission.1.txt'
submission.files <- list.files(path='./data/submissions', pattern="prediction", full.names = TRUE)
# check submission format
ValidateSubmission(files.path = submission.files,
number.of.rows = nrow(sub.template), number.of.columns = ncol(sub.template) ,
correct.header = colnames(sub.template), correct.column.1 =  sub.template[, 1])
# Create experimental-observed scatterplots
ExperimentalVsPredicted(path.prediction = submission.files, real.data = exp.val)
